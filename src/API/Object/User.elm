-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module API.Object.User exposing (..)

import API.InputObject
import API.Interface
import API.Object
import API.Scalar
import API.ScalarCodecs
import API.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


id : SelectionSet API.ScalarCodecs.Id API.Object.User
id =
    Object.selectionForField "ScalarCodecs.Id" "Id" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecId |> .decoder)


creationDate : SelectionSet API.ScalarCodecs.DateTime API.Object.User
creationDate =
    Object.selectionForField "ScalarCodecs.DateTime" "creationDate" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


modifiedDate : SelectionSet API.ScalarCodecs.DateTime API.Object.User
modifiedDate =
    Object.selectionForField "ScalarCodecs.DateTime" "modifiedDate" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


firstName : SelectionSet String API.Object.User
firstName =
    Object.selectionForField "String" "firstName" [] Decode.string


lastName : SelectionSet String API.Object.User
lastName =
    Object.selectionForField "String" "lastName" [] Decode.string


email : SelectionSet String API.Object.User
email =
    Object.selectionForField "String" "email" [] Decode.string


phoneNumber : SelectionSet String API.Object.User
phoneNumber =
    Object.selectionForField "String" "phoneNumber" [] Decode.string


company : SelectionSet (Maybe API.ScalarCodecs.Id) API.Object.User
company =
    Object.selectionForField "(Maybe ScalarCodecs.Id)" "company" [] (API.ScalarCodecs.codecs |> API.Scalar.unwrapCodecs |> .codecId |> .decoder |> Decode.nullable)


role : SelectionSet decodesTo API.Object.Role -> SelectionSet (Maybe (List (Maybe decodesTo))) API.Object.User
role object_ =
    Object.selectionForCompositeField "role" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


avatar : SelectionSet (Maybe String) API.Object.User
avatar =
    Object.selectionForField "(Maybe String)" "avatar" [] (Decode.string |> Decode.nullable)


config : SelectionSet decodesTo API.Object.Config -> SelectionSet (Maybe decodesTo) API.Object.User
config object_ =
    Object.selectionForCompositeField "config" [] object_ (identity >> Decode.nullable)
